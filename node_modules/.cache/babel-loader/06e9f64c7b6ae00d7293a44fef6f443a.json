{"ast":null,"code":"var _jsxFileName = \"/Users/weistevenchen/.atom/.learn-ide/home/steven0608/codechallenge/githubusers/src/UserList.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport ShowUser from \"./ShowUser\";\nimport UUID from \"uuid\";\n\nvar UserList = function UserList(props) {\n  function handleUserslist(data) {\n    data.forEach(function (user) {\n      fetch(user.url).then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        return props.fetchUsers(data);\n      }).catch(function (data) {\n        return console.log(data);\n      });\n    });\n  }\n\n  function handleNextUserPageClick() {\n    props.emptyUser();\n    var nextPage = props.currentUserPage + 1;\n    var nextNum = (nextPage - 1) * 30;\n    console.log(nextNum);\n    console.log(\"next Page\", nextPage);\n    var url = \"https://api.github.com/users?since=\".concat(nextNum);\n    fetch(url).then(function (r) {\n      return r.json();\n    }).then(function (data) {\n      return handleUserslist(data);\n    });\n    props.updateUserCurrentPage(nextPage);\n  }\n\n  function handlePrevUserPageClick() {\n    if (props.currentUserPage > 1) {\n      var prevPage = props.currentUserPage - 1;\n      var nextNum = (prevPage - 1) * 30;\n      var url = \"https://api.github.com/users?since=\".concat(nextNum);\n      fetch(url).then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        return handleUserslist(data);\n      });\n      props.updateUserCurrentPage(prevPage);\n    }\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui six doubling cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.userList.map(function (user) {\n    return React.createElement(ShowUser, {\n      user: user,\n      key: UUID(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.userListFetchError ? React.createElement(\"div\", {\n    className: \"ui red message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"props.userListFetchMessage\") : props.currentUserPage === 1 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"ui right labeled icon button\",\n    onClick: handleNextUserPageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Next\", React.createElement(\"i\", {\n    className: \"right chevron icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))) : props.endOfRepos ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"ui labeled icon button\",\n    onClick: handlePrevUserPageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"left chevron icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \"Prev\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"ui labeled icon button\",\n    onClick: handlePrevUserPageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"left chevron icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), \"Prev\"), React.createElement(\"button\", {\n    className: \"ui right labeled icon button\",\n    onClick: handleNextUserPageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Next\", React.createElement(\"i\", {\n    className: \"right chevron icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userList: state.userList,\n    currentUserPage: state.currentUserPage,\n    userListFetchMessage: state.userListFetchMessage,\n    userListFetchError: state.userListFetchError\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateUserCurrentPage: function updateUserCurrentPage(data) {\n      dispatch({\n        type: \"UPDATE_USER_CURRENT_PAGE\",\n        payload: data\n      });\n    },\n    fetchUsers: function fetchUsers(data) {\n      dispatch({\n        type: \"GET_USERS\",\n        payload: data\n      });\n    },\n    emptyUser: function emptyUser() {\n      dispatch({\n        type: \"EMPTY_USERS\"\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);","map":{"version":3,"sources":["/Users/weistevenchen/.atom/.learn-ide/home/steven0608/codechallenge/githubusers/src/UserList.js"],"names":["React","Fragment","connect","ShowUser","UUID","UserList","props","handleUserslist","data","forEach","user","fetch","url","then","r","json","fetchUsers","catch","console","log","handleNextUserPageClick","emptyUser","nextPage","currentUserPage","nextNum","updateUserCurrentPage","handlePrevUserPageClick","prevPage","userList","map","userListFetchError","endOfRepos","mapStateToProps","state","userListFetchMessage","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React,{Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport ShowUser from \"./ShowUser\"\nimport UUID from \"uuid\"\n\n\n\nconst UserList =(props) => {\n\n\n    function handleUserslist(data) {\n        data.forEach(user=>{\n        fetch(user.url).then(r=>r.json()).then(data=>props.fetchUsers(data)).catch(data=>console.log(data))\n      })\n    }\n\n    function handleNextUserPageClick() {\n      props.emptyUser()\n      const nextPage = props.currentUserPage +1\n      const nextNum = (nextPage - 1)* 30\n      console.log(nextNum)\n      console.log(\"next Page\", nextPage)\n      const url = `https://api.github.com/users?since=${nextNum}`\n      fetch(url).then(r=>r.json()).then(data=>handleUserslist(data))\n      props.updateUserCurrentPage(nextPage)\n    }\n\n    function handlePrevUserPageClick() {\n        if (props.currentUserPage >1) {\n          const prevPage = props.currentUserPage -1\n          const nextNum = (prevPage-1)*30\n          const url = `https://api.github.com/users?since=${nextNum}`\n          fetch(url).then(r=>r.json()).then(data=>handleUserslist(data))\n          props.updateUserCurrentPage(prevPage)\n        }\n    }\n\n\n  return(<Fragment>\n    <div className=\"ui six doubling cards\">\n      {props.userList.map(user=>\n        <ShowUser user={user} key={UUID()}/>\n      )}\n      </div>\n      <div>\n      {props.userListFetchError ?\n        <div  className=\"ui red message\">\n            props.userListFetchMessage\n        </div>\n        :\n        props.currentUserPage === 1 ?\n          <div><button className=\"ui right labeled icon button\" onClick={handleNextUserPageClick}>Next<i className=\"right chevron icon\"></i></button></div>\n          :\n            props.endOfRepos ?\n            <div><button className=\"ui labeled icon button\" onClick={handlePrevUserPageClick}><i className=\"left chevron icon\"></i>Prev</button></div>\n            :\n          <div><button className=\"ui labeled icon button\" onClick={handlePrevUserPageClick}><i className=\"left chevron icon\"></i>Prev</button><button className=\"ui right labeled icon button\" onClick={handleNextUserPageClick}>Next<i className=\"right chevron icon\"></i></button></div>\n        \n      }\n\n      </div>\n      </Fragment>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {userList: state.userList,\n          currentUserPage:state.currentUserPage,\n          userListFetchMessage:state.userListFetchMessage,\n          userListFetchError:state.userListFetchError,\n          }\n        }\n\nfunction mapDispatchToProps(dispatch) {\n\n  return {\n          updateUserCurrentPage: (data) => {\n            dispatch({type: \"UPDATE_USER_CURRENT_PAGE\",payload:data})\n        },\n        fetchUsers: (data) => {\n          dispatch({type: \"GET_USERS\", payload: data})\n        },\n        emptyUser: () => {\n          dispatch({type: \"EMPTY_USERS\"})\n        },\n      }\n  }\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(UserList)\n"]},"metadata":{},"sourceType":"module"}