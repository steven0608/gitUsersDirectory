{"ast":null,"code":"var _jsxFileName = \"/Users/weistevenchen/.atom/.learn-ide/home/steven0608/codechallenge/githubusers/src/UserList.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport ShowUser from \"./ShowUser\";\nimport UUID from \"uuid\";\n\nvar UserList = function UserList(props) {\n  function handleUserslist(data) {\n    if (!!data.message) {} else {\n      this.props.noUserListFetchError();\n      return data.forEach(function (user) {\n        fetch(user.url).then(function (r) {\n          return r.json();\n        }).then(function (data) {\n          return props.fetchUsers(data);\n        }).catch(function (data) {\n          return console.log(data);\n        });\n      });\n    }\n  }\n\n  function handleNextUserPageClick() {\n    props.emptyUser();\n    var nextPage = props.currentUserPage + 1;\n    var nextNum = (nextPage - 1) * 30;\n    console.log(nextNum);\n    console.log(\"next Page\", nextPage);\n    var url = \"https://api.github.com/users?since=\".concat(nextNum);\n    fetch(url).then(function (r) {\n      return r.json();\n    }).then(function (data) {\n      return handleUserslist(data);\n    });\n    props.updateUserCurrentPage(nextPage);\n  }\n\n  function handlePrevUserPageClick() {\n    if (props.currentUserPage > 1) {\n      var prevPage = props.currentUserPage - 1;\n      var nextNum = (prevPage - 1) * 30;\n      var url = \"https://api.github.com/users?since=\".concat(nextNum);\n      fetch(url).then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        return handleUserslist(data);\n      });\n      props.updateUserCurrentPage(prevPage);\n    }\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ui six doubling cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.userList.map(function (user) {\n    return React.createElement(ShowUser, {\n      user: user,\n      key: UUID(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.userListFetchError ? React.createElement(\"div\", {\n    className: \"ui red message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.userListFetchMessage) : props.currentUserPage === 1 ? React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"ui right labeled icon green basic button changeColor\",\n    onClick: handleNextUserPageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Current Page: \", props.currentUserPage, \" Next\", React.createElement(\"i\", {\n    className: \"right chevron icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))) : props.endOfRepos ? React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"ui labeled icon red basic button changeColor\",\n    onClick: handlePrevUserPageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"left chevron icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), \"Current Page: \", props.currentUserPage, \" Prev\")) : React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"ui labeled icon red basic button changeColor\",\n    onClick: handlePrevUserPageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"left chevron icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), \"Prev\"), React.createElement(\"span\", {\n    className: \"pageNum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Current Page: \", props.currentUserPage), React.createElement(\"button\", {\n    className: \"ui right labeled icon green basic button changeColor\",\n    onClick: handleNextUserPageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Next\", React.createElement(\"i\", {\n    className: \"right chevron icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userList: state.userList,\n    currentUserPage: state.currentUserPage,\n    userListFetchMessage: state.userListFetchMessage,\n    userListFetchError: state.userListFetchError\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateUserCurrentPage: function updateUserCurrentPage(data) {\n      dispatch({\n        type: \"UPDATE_USER_CURRENT_PAGE\",\n        payload: data\n      });\n    },\n    fetchUsers: function fetchUsers(data) {\n      dispatch({\n        type: \"GET_USERS\",\n        payload: data\n      });\n    },\n    emptyUser: function emptyUser() {\n      dispatch({\n        type: \"EMPTY_USERS\"\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);","map":{"version":3,"sources":["/Users/weistevenchen/.atom/.learn-ide/home/steven0608/codechallenge/githubusers/src/UserList.js"],"names":["React","Fragment","connect","ShowUser","UUID","UserList","props","handleUserslist","data","message","noUserListFetchError","forEach","user","fetch","url","then","r","json","fetchUsers","catch","console","log","handleNextUserPageClick","emptyUser","nextPage","currentUserPage","nextNum","updateUserCurrentPage","handlePrevUserPageClick","prevPage","userList","map","userListFetchError","userListFetchMessage","endOfRepos","mapStateToProps","state","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React,{Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport ShowUser from \"./ShowUser\"\nimport UUID from \"uuid\"\n\n\n\nconst UserList =(props) => {\n\n\n    function handleUserslist(data) {\n      if (!!data.message) {\n\n      } else {\n        this.props.noUserListFetchError()\n        return data.forEach(user=>{\n        fetch(user.url).then(r=>r.json()).then(data=>props.fetchUsers(data)).catch(data=>console.log(data))\n      })\n      }\n\n    }\n\n    function handleNextUserPageClick() {\n      props.emptyUser()\n      const nextPage = props.currentUserPage +1\n      const nextNum = (nextPage - 1)* 30\n      console.log(nextNum)\n      console.log(\"next Page\", nextPage)\n      const url = `https://api.github.com/users?since=${nextNum}`\n      fetch(url).then(r=>r.json()).then(data=>handleUserslist(data))\n      props.updateUserCurrentPage(nextPage)\n    }\n\n    function handlePrevUserPageClick() {\n        if (props.currentUserPage >1) {\n          const prevPage = props.currentUserPage -1\n          const nextNum = (prevPage-1)*30\n          const url = `https://api.github.com/users?since=${nextNum}`\n          fetch(url).then(r=>r.json()).then(data=>handleUserslist(data))\n          props.updateUserCurrentPage(prevPage)\n        }\n    }\n\n\n  return(<Fragment>\n    <div className=\"ui six doubling cards\">\n      {props.userList.map(user=>\n        <ShowUser user={user} key={UUID()}/>\n      )}\n      </div>\n      <div>\n      {props.userListFetchError ?\n        <div  className=\"ui red message\">\n            {props.userListFetchMessage}\n        </div>\n        :\n        props.currentUserPage === 1 ?\n          <div className=\"center\"><button className=\"ui right labeled icon green basic button changeColor\" onClick={handleNextUserPageClick}>Current Page: {props.currentUserPage} Next<i className=\"right chevron icon\"></i></button></div>\n          :\n            props.endOfRepos ?\n            <div className=\"center\"><button className=\"ui labeled icon red basic button changeColor\" onClick={handlePrevUserPageClick}><i className=\"left chevron icon\"></i>Current Page: {props.currentUserPage} Prev</button></div>\n            :\n          <div className=\"center\"><button className=\"ui labeled icon red basic button changeColor\" onClick={handlePrevUserPageClick}><i className=\"left chevron icon\"></i>Prev</button><span className=\"pageNum\">Current Page: {props.currentUserPage}</span><button className=\"ui right labeled icon green basic button changeColor\" onClick={handleNextUserPageClick}>Next<i className=\"right chevron icon\"></i></button></div>\n\n      }\n\n      </div>\n      </Fragment>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {userList: state.userList,\n          currentUserPage:state.currentUserPage,\n          userListFetchMessage:state.userListFetchMessage,\n          userListFetchError:state.userListFetchError,\n          }\n        }\n\nfunction mapDispatchToProps(dispatch) {\n\n  return {\n          updateUserCurrentPage: (data) => {\n            dispatch({type: \"UPDATE_USER_CURRENT_PAGE\",payload:data})\n        },\n        fetchUsers: (data) => {\n          dispatch({type: \"GET_USERS\", payload: data})\n        },\n        emptyUser: () => {\n          dispatch({type: \"EMPTY_USERS\"})\n        },\n      }\n  }\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(UserList)\n"]},"metadata":{},"sourceType":"module"}