{"ast":null,"code":"var _jsxFileName = \"/Users/weistevenchen/.atom/.learn-ide/home/steven0608/codechallenge/upload/src/ShowUser.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from \"react-redux\";\n\nvar ShowUser = function ShowUser(props) {\n  function handleClickOnUser(event) {\n    event.preventDefault();\n    props.clickShowRepos();\n    props.selectUser(props.user.login);\n    props.updateCurrentRepopage(1);\n    props.resetEndOfRepo(); // console.log(props.user.login)\n    // \"https://api.github.com/users/steven0608/repos?page=1&per_page=100\"\n\n    var url = \"https://api.github.com/users/\".concat(props.user.login, \"/repos?page=1&per_page=20\");\n    var API_KEY = \"\".concat(process.env.REACT_APP_API_KEY_YT);\n    var configSubmit = {\n      headers: {\n        Authorization: \"token \".concat(API_KEY)\n      } // console.log(url)\n\n    };\n    fetch(url, configSubmit).then(function (r) {\n      return r.json();\n    }).then(function (data) {\n      return props.getRepos(data);\n    }).catch(function (data) {\n      return console.log(data);\n    });\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.showRepos ? React.createElement(\"div\", {\n    className: props.selectedUser === props.user.login ? \"small card selected\" : \"small card greyBackground\",\n    onClick: handleClickOnUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.user.avatar_url,\n    alt: \"Empty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.user.name)))) : React.createElement(\"div\", {\n    className: props.selectedUser === props.user.login ? \"small card selected\" : \"small card greyBackground\",\n    onClick: handleClickOnUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.user.avatar_url,\n    alt: \"Empty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.user.name), React.createElement(\"div\", {\n    className: \"meta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, props.user.login)), React.createElement(\"div\", {\n    className: \"description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, !!props.user.location ? \"Live in \".concat(props.user.location, \" \") : null, !!props.user.company ? \"Company: \".concat(props.user.company, \" \") : null, \"Has \", props.user.public_repos, \" Public Repos\")), React.createElement(\"div\", {\n    className: \"extra content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"right floated\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Follwing:\", props.user.following), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"user icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), props.user.followers, \" Followers\"))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    showRepos: state.showRepos,\n    selectedUser: state.selectedUser\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    clickShowRepos: function clickShowRepos() {\n      dispatch({\n        type: \"SHOW_REPO\"\n      });\n    },\n    selectUser: function selectUser(data) {\n      dispatch({\n        type: \"SELECT_USER\",\n        payload: data\n      });\n    },\n    getRepos: function getRepos(data) {\n      dispatch({\n        type: \"GET_REPOS\",\n        payload: data\n      });\n    },\n    updateCurrentRepopage: function updateCurrentRepopage(data) {\n      dispatch({\n        type: \"UPDATE_CURRENT_REPO_PAGE\",\n        payload: data\n      });\n    },\n    resetEndOfRepo: function resetEndOfRepo() {\n      dispatch({\n        type: \"RESET_END_OF_REPO\"\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowUser);","map":{"version":3,"sources":["/Users/weistevenchen/.atom/.learn-ide/home/steven0608/codechallenge/upload/src/ShowUser.js"],"names":["React","Fragment","connect","ShowUser","props","handleClickOnUser","event","preventDefault","clickShowRepos","selectUser","user","login","updateCurrentRepopage","resetEndOfRepo","url","API_KEY","process","env","REACT_APP_API_KEY_YT","configSubmit","headers","Authorization","fetch","then","r","json","data","getRepos","catch","console","log","showRepos","selectedUser","avatar_url","name","location","company","public_repos","following","followers","mapStateToProps","state","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React,{Fragment} from 'react';\nimport {connect} from \"react-redux\"\n\n\nconst ShowUser=(props) => {\n\n  function handleClickOnUser(event){\n    event.preventDefault()\n    props.clickShowRepos()\n    props.selectUser(props.user.login)\n    props.updateCurrentRepopage(1)\n    props.resetEndOfRepo()\n    // console.log(props.user.login)\n\n    // \"https://api.github.com/users/steven0608/repos?page=1&per_page=100\"\n    const url = `https://api.github.com/users/${props.user.login}/repos?page=1&per_page=20`\n    const API_KEY =`${process.env.REACT_APP_API_KEY_YT}`\n    const configSubmit = {\n        headers: {\n    Authorization: `token ${API_KEY}`\n  }\n}\n    // console.log(url)\n    fetch(url, configSubmit).then(r=>r.json()).then(data=>props.getRepos(data)).catch(data=>console.log(data))\n  }\n\n  return(<Fragment>\n    {props.showRepos ?\n      <div className={props.selectedUser === props.user.login ? `small card selected` :`small card greyBackground`} onClick={handleClickOnUser}>\n                <div className=\"image\">\n                  <img src={props.user.avatar_url} alt=\"Empty\" />\n                </div>\n\n                <div className=\"content\">\n                  <div className=\"meta\">\n                    <div>{props.user.name}</div>\n                  </div>\n                </div>\n          </div>\n\n        :\n        <div className={props.selectedUser === props.user.login ? `small card selected` :`small card greyBackground`} onClick={handleClickOnUser}>\n                <div className=\"image\">\n                  <img src={props.user.avatar_url} alt=\"Empty\" />\n                </div>\n\n                <div className=\"content\">\n                  <div className=\"header\">{props.user.name}</div>\n                  <div className=\"meta\">\n                    <div>{props.user.login}</div>\n                  </div>\n                  <div className=\"description\">\n                    {!!props.user.location ? `Live in ${props.user.location} ` : null}\n                    {!!props.user.company ? `Company: ${props.user.company} ` : null}\n                    Has {props.user.public_repos} Public Repos\n                  </div>\n                </div>\n                <div className=\"extra content\">\n                  <span className=\"right floated\">\n                    Follwing:{props.user.following}\n                  </span>\n                  <span>\n                    <i className=\"user icon\"></i>\n                    {props.user.followers} Followers\n                  </span>\n                </div>\n          </div>}\n      </Fragment>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {showRepos: state.showRepos,\n          selectedUser:state.selectedUser,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    clickShowRepos: () => {\n      dispatch({type: \"SHOW_REPO\"})\n    },\n    selectUser: (data)=>{\n      dispatch({type: \"SELECT_USER\", payload: data})\n    },\n    getRepos: (data)=>{\n      dispatch({type: \"GET_REPOS\", payload: data})\n    },\n    updateCurrentRepopage: (data) => {\n      dispatch({type: \"UPDATE_CURRENT_REPO_PAGE\", payload: data})\n    },\n    resetEndOfRepo: () => {\n      dispatch({type: \"RESET_END_OF_REPO\"})\n    },\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ShowUser)\n"]},"metadata":{},"sourceType":"module"}