{"ast":null,"code":"var _jsxFileName = \"/Users/weistevenchen/.atom/.learn-ide/home/steven0608/codechallenge/githubusers/src/RepoList.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport UUID from \"uuid\";\nimport ShowRepo from \"./ShowRepo\";\n\nvar RepoList = function RepoList(props) {\n  function handleNextPageClick() {\n    var nextPage = props.currentRepoPage + 1;\n    var url = \"https://api.github.com/users/\".concat(props.selectedUser.login, \"/repos?page=\").concat(nextPage, \"&per_page=20\"); // fetch(url).then(r=>r.json()).then(data=>props.updateRepoList(data))\n\n    fetch(url).then(function (r) {\n      return r.json();\n    }).then(function (data) {\n      return console.log(data);\n    });\n    props.updateCurrentRepopage(nextPage);\n  }\n\n  function handlePrevPageClick() {\n    if (props.currentRepoPage > 1) {\n      var prevPage = props.currentRepoPage - 1;\n      var url = \"https://api.github.com/users/\".concat(props.selectedUser.login, \"/repos?page=\").concat(prevPage, \"&per_page=20\");\n      fetch(url).then(function (r) {\n        return r.json();\n      }).then(function (data) {\n        return props.updateRepoList(data);\n      });\n      props.updateCurrentRepopage(prevPage);\n    }\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    className: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"repositories List\"), React.createElement(\"div\", {\n    className: \"ui list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.reposList.map(function (repo) {\n    return React.createElement(ShowRepo, {\n      repo: repo,\n      key: UUID(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.currentRepoPage === 1 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleNextPageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Next\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handlePrevPageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Prev\"), React.createElement(\"button\", {\n    onClick: handleNextPageClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Next\"))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    reposList: state.reposList,\n    selectedUser: state.selectedUser,\n    currentRepoPage: state.currentRepoPage\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateCurrentRepopage: function updateCurrentRepopage(data) {\n      dispatch({\n        type: \"UPDATE_CURRENT_REPO_PAGE\",\n        payload: data\n      });\n    },\n    updateRepoList: function updateRepoList(data) {\n      dispatch({\n        type: \"UPDATE_REPO_LIST\",\n        payload: data\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RepoList);","map":{"version":3,"sources":["/Users/weistevenchen/.atom/.learn-ide/home/steven0608/codechallenge/githubusers/src/RepoList.js"],"names":["React","Fragment","connect","UUID","ShowRepo","RepoList","props","handleNextPageClick","nextPage","currentRepoPage","url","selectedUser","login","fetch","then","r","json","data","console","log","updateCurrentRepopage","handlePrevPageClick","prevPage","updateRepoList","reposList","map","repo","mapStateToProps","state","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, {Fragment }from 'react';\nimport {connect} from \"react-redux\";\nimport UUID from \"uuid\"\nimport ShowRepo from \"./ShowRepo\"\n\n\n\nconst RepoList =(props) => {\n\n  function handleNextPageClick(){\n    const nextPage = props.currentRepoPage + 1\n    const url = `https://api.github.com/users/${props.selectedUser.login}/repos?page=${nextPage}&per_page=20`\n    // fetch(url).then(r=>r.json()).then(data=>props.updateRepoList(data))\n    fetch(url).then(r=>r.json()).then(data=>console.log(data))\n    props.updateCurrentRepopage(nextPage)\n  }\n\n  function handlePrevPageClick(){\n    if (props.currentRepoPage>1) {\n      const prevPage = props.currentRepoPage - 1\n      const url = `https://api.github.com/users/${props.selectedUser.login}/repos?page=${prevPage}&per_page=20`\n      fetch(url).then(r=>r.json()).then(data=>props.updateRepoList(data))\n      props.updateCurrentRepopage(prevPage)\n    }\n  }\n  return(\n    <Fragment>\n      <center className=\"black\">repositories List</center>\n        <div className=\"ui list\">\n          {props.reposList.map(repo=>\n            <ShowRepo repo={repo} key={UUID()}/>\n            )}\n          </div>\n        <div>\n        {props.currentRepoPage === 1 ?\n          <div><button onClick={handleNextPageClick}>Next</button></div>\n          :\n          <div><button onClick={handlePrevPageClick}>Prev</button><button onClick={handleNextPageClick}>Next</button></div>\n        }\n        </div>\n      </Fragment>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {reposList: state.reposList,\n          selectedUser: state.selectedUser,\n          currentRepoPage:state.currentRepoPage,\n\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateCurrentRepopage: (data) => {\n      dispatch({type: \"UPDATE_CURRENT_REPO_PAGE\", payload: data})\n    },\n    updateRepoList: (data) => {\n      dispatch({type: \"UPDATE_REPO_LIST\", payload: data})\n    },\n\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(RepoList)\n"]},"metadata":{},"sourceType":"module"}